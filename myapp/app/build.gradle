// Gradle 빌드 도구가 사용할 플러그인 설정
plugins {
    // 자바 어플리케이션을 생성하는 플러그인
    // 이 플러그인을 추가하면 'java' 플러그인이 자동으로 추가된다.
    // 따라서 따로 자바 플러그인을 추가할 필요가 없다.
    id 'application'
    
    // Eclipse IDE 관련 작업을 수행할 수 있는 플러그인
    id 'eclipse'
}

// 이 프로젝트에서 사용할 외부 라이브러리를 제공하는 서버를 설정한다.
// 외부 라이브러리란?
// - 다른 개발자가 만든 코드를 담고 있는 파일이다.
repositories {
    // 메이븐 사이트에서 제공하는 라이브러리 서버
    mavenCentral()
}

// 이 프로젝트에서 사용할 외부 라이브러리를 지정한다.
// 여기에 다운로드할 외부 라이브러리를 지정한다.
// 빌드할 때 위에서 설정한 서버에 가서
// 라이브러리를 다운로드 해온다.
dependencies {
    // 단위 테스트 할 때 사용할 라이브러리
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    // 단위 테스트와 관련된 라이브러리
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 일반적으로 어플리케이션을 개발할 때 많이 사용하는 라이브러리
    // 구글 개발자들이 만든 라이브러리이다.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// 소스 파일이 어떤 자바 버전으로 되어 있는지 Gradle에게 알려준다.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// 'application' 플러그인과 관련된 설정이다.
application {
    // 'run' 명령을 수행할때 실행시킬 자바 클래스 이름이다.
    mainClass = 'bitcamp.myapp.App'
}

//단위 테스트를 수행할 때 사용할 설정
tasks.named('test') {
    // 단위 테스트를 수행할 때 JUnit 도구를 사용하도록 지정한다.
    useJUnitPlatform()
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile).configureEach {
        //프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // windows는 인코딩방식이 utf-8이 아니라 한글이 깨질 수 있다.
    // utf-8로 바까주자
    options.encoding = 'UTF-8'
    sourceCompatibility = '21'
    targetCompatibility = '21'
}
run {
    standardInput = System.in
}

// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "java-basic"
    }
    jdt {
      sourceCompatibility = 21
      targetCompatibility = 21
      javaRuntimeName = "JavaSE-21"
    }
}
